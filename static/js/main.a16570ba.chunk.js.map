{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContacts.js","components/test/Test.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","showOnClick","onDeleteClick","a","delete","e","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","title","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContacts","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContacts","match","params","updContact","put","Test","body","fetch","then","response","json","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a16570ba.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts : state.contacts.filter(\r\n\t\t\t\t contact => contact.id !== action.payload)\r\n\t\t\t};\r\n\t\tcase 'ADD_CONTACT':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [action.payload, ...state.contacts ]\r\n\t\t\t};\r\n\t\tcase 'UPDATE_CONTACT':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts : state.contacts.map(contact =>\r\n\t\t\t\t\tcontact.id === action.payload.id \r\n\t\t\t\t\t? (contact = action.payload)\r\n\t\t\t\t\t: contact)\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport class Provider extends Component{\r\n\tstate = {\r\n\t\tcontacts:[],\r\n\t\tdispatch: action =>{\r\n\t\t\tthis.setState(state => \r\n\t\t\t\treducer(state,action))\r\n\t\t}\r\n\t};\r\n\r\n\tasync componentDidMount () {\r\n\t\tconst res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\t\tthis.setState({contacts: res.data});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t{this.props.children}\r\n\t\t\t</Context.Provider>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport const Consumer =\tContext.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n\tstate={\r\n\t\tshowContactInfo : false\r\n\t};\r\n\tshowOnClick = () =>{\r\n\t \tthis.setState({showContactInfo : !this.state.showContactInfo})\r\n\t}\r\n\tonDeleteClick =async (id,dispatch) => {\r\n\t\ttry\r\n\t\t{\r\n\t\t\taxios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\t\tdispatch({type :'DELETE_CONTACT', payload:id});\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tdispatch({type :'DELETE_CONTACT', payload:id});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst {showContactInfo} = this.state;\r\n\t\tconst {id, name, email,phone} = this.props.contact;\r\n\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t{value => {\r\n\t\t\t\tconst {dispatch}=value;\r\n\t\t\t\treturn(\r\n\t\t\t\t<div className=\"card card-body mb-3\">\r\n\t\t\t\t<h4>\r\n\t\t\t\t{name}<i onClick={this.showOnClick} className=\"fas fa-sort-down\"  \r\n\t\t\t\tstyle={{cursor:'pointer'}}/>\r\n\t\t\t\t<i className=\"fas fa-times\" style={{cursor:'pointer', float:'right',\r\n\t\t\t\t color:'red'}} onClick={this.onDeleteClick.bind(this,id,dispatch)} \r\n\t\t\t\t />\r\n\t\t\t\t<Link to={`contacts/edit/${id}`}>\r\n\t\t\t\t\t<i className=\"fas fa-pencil-alt\"\r\n\t\t\t\t\t\tstyle={{cursor:'pointer',\r\n\t\t\t\t\t\tfloat:'right',\r\n\t\t\t\t\t\tcolor:'black',\r\n\t\t\t\t\t\tmarginRight:'1rem'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t\t</h4>\r\n\t\t\t\t{showContactInfo ? (<ul className=\"list-group\">\r\n\t\t\t\t\t<li className=\"list-group-item\">e-mail : {email}</li>\r\n\t\t\t\t\t<li className=\"list-group-item\">phone : {phone} </li>\r\n\t\t\t\t</ul>) : null}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t)\t\r\n\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nContact.propTypes = {\r\n\tcontact: PropTypes.object.isRequired,\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './Contact.js';\r\n\r\nimport {Consumer} from '../../context.js';\r\nclass Contacts extends React.Component {\r\n\t\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value =>{\r\n\t\t\t\t\tconst {contacts} = value;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<h1 className=\"display-4 mb-2\">\r\n\t\t\t\t\t\t<span className=\"text-danger\">Contact </span>List</h1>\r\n\t\t\t\t\t\t{contacts.map(contact =>(\r\n\t\t\t\t\t\t<Contact \r\n\t\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</React.Fragment>\t\t\t\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\tconst {title} = props;\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n\t\t<div className=\"container\">\r\n\t\t\t<a href=\"/\" style={{color:'white', cursor:'pointer'}} className=\"navbar-title\" >\r\n\t\t\t{title}\r\n\t\t\t</a>\r\n\t\t\t<div>\r\n\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link to=\"/\" \r\n\t\t\t\t\t\tclassName=\"nav-link\">\r\n\t\t\t\t\t\t<i className=\"fas fa-home\"></i>Home\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link to=\"/contacts/add\" \r\n\t\t\t\t\t\tclassName=\"nav-link\">\r\n\t\t\t\t\t\t<i className=\"fas fa-plus\"></i>Add\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link to=\"/about\" \r\n\t\t\t\t\t\tclassName=\"nav-link\">\r\n\t\t\t\t\t\t<i className=\"fas fa-question\"></i>About\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\nHeader.defaultProps = {\r\n\ttitle : \"my app\"\r\n}\r\nHeader.propTypes = {\r\n\ttitle : PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup = ({\r\n\tlabel,\r\n\tname,\r\n\tvalue,\r\n\tplaceholder,\r\n\ttype,\r\n\tonChange,\r\n\terror\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<input type={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tclassName={classnames('form-control form-control-lg',{'is-invalid' : error})}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange = {onChange}\t\t\t\t\t\t\t\r\n\t\t\t/>\r\n\t\t\t{error && <div className=\"invalid-feedback\">{error}</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\nTextInputGroup.propTypes={\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tplaceholder: PropTypes.string.isRequired,\r\n\tvalue: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\terror:PropTypes.string\r\n}\r\nTextInputGroup.defaultProps={\r\n\ttype: 'text'\r\n}\r\nexport default TextInputGroup","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass AddContacts extends React.Component {\r\n\tstate = {\r\n\t\tname:'',\r\n\t\temail:'',\r\n\t\tphone:'',\r\n\t\terrors:{}\r\n\t}\r\n\tonSubmit = async(dispatch,e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tconst {name, email, phone} = this.state;\r\n\r\n\t\tconst newContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t};\r\n\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: 'Name is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: 'E-mail is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: 'phone is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst res =await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n\t\tdispatch({type:'ADD_CONTACT', payload: res.data});\r\n\t\t\r\n\r\n\t\t//resetting all the text boxes\r\n\t\tthis.setState({\r\n\t\t\tname:'',\r\n\t\t\temail:'',\r\n\t\t\tphone:'',\r\n\t\t\terrors:{}\r\n\t\t})\t\t\r\n\t\t//pushing to the homepage\r\n\t\tthis.props.history.push(\"/\");\r\n\t}\r\n\tonChange = (e) => this.setState({[e.target.name] : e.target.value}\r\n\t\t)\r\n\trender() {\r\n\t\tconst {name, email, phone, errors} = this.state;\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value =>{\r\n\t\t\t\t\tconst { dispatch } =value;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\tAdd Contact\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit ={this.onSubmit.bind(this,dispatch)}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"Name\"\r\n\t\t\t\t\t\t\tname =\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name...\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"E-mail\"\r\n\t\t\t\t\t\t\tname =\"email\"\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder=\"Enter E-mail...\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"phone\"\r\n\t\t\t\t\t\t\tname =\"phone\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter phone...\"\r\n\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add Contact\" \r\n\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default AddContacts","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass EditContacts extends React.Component {\r\n\tstate = {\r\n\t\tname:'',\r\n\t\temail:'',\r\n\t\tphone:'',\r\n\t\terrors:{}\r\n    }\r\n    \r\n    async componentDidMount (){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        });\r\n    }\r\n\r\n\tonSubmit = async(dispatch,e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tconst {name, email, phone} = this.state;\r\n\r\n\t\t\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: 'Name is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: 'E-mail is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: 'phone is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst { id } = this.props.match.params;\r\n\r\n\t\tconst updContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t};\r\n\t\tconst res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n\t\tdispatch({ type : 'UPDATE_CONTACT', \r\n\t\t\t\t\tpayload : res.data});\r\n\r\n\t\t//resetting all the text boxes\r\n\t\tthis.setState({\r\n\t\t\tname:'',\r\n\t\t\temail:'',\r\n\t\t\tphone:'',\r\n\t\t\terrors:{}\r\n\t\t})\t\t\r\n\t\t//pushing to the homepage\r\n\t\tthis.props.history.push(\"/\");\r\n\t}\r\n\tonChange = (e) => this.setState({[e.target.name] : e.target.value}\r\n\t\t)\r\n\trender() {\r\n\t\tconst {name, email, phone, errors} = this.state;\r\n\t\treturn(\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value =>{\r\n\t\t\t\t\tconst { dispatch } =value;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\tEdit Contact\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit ={this.onSubmit.bind(this,dispatch)}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"Name\"\r\n\t\t\t\t\t\t\tname =\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name...\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"E-mail\"\r\n\t\t\t\t\t\t\tname =\"email\"\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder=\"Enter E-mail...\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel= \"phone\"\r\n\t\t\t\t\t\t\tname =\"phone\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter phone...\"\r\n\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Update Contact\" \r\n\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default EditContacts","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title:'',\r\n        body:''\r\n    };\r\n    componentDidMount () {\r\n        fetch('http://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n    render() {\r\n        const{title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">{title}</h1>\r\n                <p>\r\n                    {body}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test","import React from 'react'\r\n\r\nexport default function About() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"display-4\">\r\n\t\t\tAbout Contact Manager!</h1>\r\n\t\t\t<p className=\"lead\">This is a simple app to manage contacts</p>\r\n\t\t\t<p className=\"text-secondary\">version: 1.0.0</p>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"display-4\"> <span className=\"text-danger\">\r\n\t\t\t404</span> Page Not Found</h1>\r\n\t\t\t<p className=\"lead\">Sorry, that page doesnot exist.</p>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts.js';\nimport Header from './components/layout/Header.js';\nimport AddContacts from './components/contacts/AddContacts';\nimport EditContacts from './components/contacts/EditContacts';\nimport Test from './components/test/Test';\nimport {Provider} from './context.js';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n  \t<Provider>\n    <Router>\n    <div className=\"App\">\n      <Header title = \"Conact Manager!\" />\n      \n      <div className=\"container\">\n      <Switch>\n      <Route exact path=\"/\" component ={Contacts}>\n      </Route>\n      <Route exact path=\"/contacts/add\" component ={AddContacts}>\n      </Route>\n      <Route exact path=\"/about\" component={About}></Route>\n      <Route exact path=\"/contacts/edit/:id\" component={EditContacts}></Route>\n      <Route exact path=\"/test\" component={Test}></Route>\n      <Route component={NotFound}></Route>\n      \n      </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}